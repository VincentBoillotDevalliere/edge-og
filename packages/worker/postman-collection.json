{
  "info": {
    "name": "Edge-OG API Key Management",
    "description": "Testing collection for AQ-1 API key management functionality",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:64539",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "test-user-postman",
      "type": "string"
    },
    {
      "key": "apiKey",
      "value": "",
      "type": "string"
    },
    {
      "key": "keyId", 
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Create API Key",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"name\": \"Postman Test Key\",\n  \"quotaLimit\": 5000\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/dashboard/api-keys",
          "host": ["{{baseUrl}}"],
          "path": ["dashboard", "api-keys"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "  const response = pm.response.json();",
              "  pm.collectionVariables.set('apiKey', response.data.key);",
              "  pm.collectionVariables.set('keyId', response.data.id);",
              "  pm.test('API Key created successfully', () => {",
              "    pm.expect(response.success).to.be.true;",
              "    pm.expect(response.data.key).to.match(/^edgeog_[a-z0-9]{32}$/);",
              "  });",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "2. List API Keys",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/dashboard/api-keys?userId={{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["dashboard", "api-keys"],
          "query": [
            {
              "key": "userId",
              "value": "{{userId}}"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Lists API keys successfully', () => {",
              "  const response = pm.response.json();",
              "  pm.expect(pm.response.code).to.equal(200);",
              "  pm.expect(response.success).to.be.true;",
              "  pm.expect(response.data).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "3. Get User Quota Info",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/dashboard/user/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["dashboard", "user", "{{userId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Gets user quota info', () => {",
              "  const response = pm.response.json();",
              "  pm.expect(pm.response.code).to.equal(200);",
              "  pm.expect(response.data.userId).to.equal(pm.collectionVariables.get('userId'));",
              "  pm.expect(response.data.totalQuotaUsed).to.be.a('number');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "4. Generate OG Image (with API key)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/og?title=Test Image&description=Generated with API key&theme=blue&api_key={{apiKey}}",
          "host": ["{{baseUrl}}"],
          "path": ["og"],
          "query": [
            {
              "key": "title",
              "value": "Test Image"
            },
            {
              "key": "description", 
              "value": "Generated with API key"
            },
            {
              "key": "theme",
              "value": "blue"
            },
            {
              "key": "api_key",
              "value": "{{apiKey}}"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Generates OG image with API key', () => {",
              "  pm.expect(pm.response.code).to.equal(200);",
              "  pm.expect(pm.response.headers.get('Content-Type')).to.include('image/png');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "5. Generate OG Image (invalid API key)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/og?title=Test&description=Should fail&api_key=edgeog_invalid123456789012345678901234",
          "host": ["{{baseUrl}}"],
          "path": ["og"],
          "query": [
            {
              "key": "title",
              "value": "Test"
            },
            {
              "key": "description",
              "value": "Should fail"
            },
            {
              "key": "api_key",
              "value": "edgeog_invalid123456789012345678901234"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Rejects invalid API key', () => {",
              "  pm.expect(pm.response.code).to.equal(401);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "6. Health Check",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      }
    },
    {
      "name": "7. Homepage",
      "request": {
        "method": "GET", 
        "url": {
          "raw": "{{baseUrl}}/",
          "host": ["{{baseUrl}}"],
          "path": [""]
        }
      }
    }
  ]
}
